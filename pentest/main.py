import os
import sys
from time import sleep as timeout
from colorama import init, Fore, Style

RESET = '\x1b[0m'
OKORANGE = '\033[93m'
os.system("clear")
def restart_program():
    python = sys.executable
    os.execl(python, python, *sys.argv)

def clear_screen():
    os.system("clear")
def print_logo():
    clear_screen()
    print("\n\n\n")
    #print("\t\t\t*********************************************************************************")
    #print("\t\t\t*\t\t\t\t\t\t\t\t\t\t*\n\t\t\t*\t\t\t\t\t\t\t\t\t\t*")
    print(OKORANGE + '''
     ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄               ▄           ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄      
    ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌             ▐░▌         ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌      ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌     
     ▀▀▀▀█░█▀▀▀▀ ▐░█▀▀▀▀▀▀▀█░▌ ▐░▌           ▐░▌          ▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌░▌     ▐░▌ ▀▀▀▀█░█▀▀▀▀ ▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀▀▀  ▀▀▀▀█░█▀▀▀▀      
         ▐░▌     ▐░▌       ▐░▌  ▐░▌         ▐░▌           ▐░▌       ▐░▌▐░▌          ▐░▌▐░▌    ▐░▌     ▐░▌     ▐░▌          ▐░▌               ▐░▌          
         ▐░▌     ▐░█▄▄▄▄▄▄▄█░▌   ▐░▌       ▐░▌▄▄▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌ ▐░▌   ▐░▌     ▐░▌     ▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄      ▐░▌          
         ▐░▌     ▐░░░░░░░░░░░▌    ▐░▌     ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌  ▐░▌  ▐░▌     ▐░▌     ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌     ▐░▌          
         ▐░▌     ▐░█▀▀▀▀▀▀▀█░▌     ▐░▌   ▐░▌  ▀▀▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀▀▀ ▐░▌   ▐░▌ ▐░▌     ▐░▌     ▐░█▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀█░▌     ▐░▌          
         ▐░▌     ▐░▌       ▐░▌      ▐░▌ ▐░▌               ▐░▌          ▐░▌          ▐░▌    ▐░▌▐░▌     ▐░▌     ▐░▌                    ▐░▌     ▐░▌          
     ▄▄▄▄█░█▄▄▄▄ ▐░▌       ▐░▌       ▐░▐░▌                ▐░▌          ▐░█▄▄▄▄▄▄▄▄▄ ▐░▌     ▐░▐░▌     ▐░▌     ▐░█▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄█░▌     ▐░▌          
    ▐░░░░░░░░░░░▌▐░▌       ▐░▌        ▐░▌                 ▐░▌          ▐░░░░░░░░░░░▌▐░▌      ▐░░▌     ▐░▌     ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌     ▐░▌          
     ▀▀▀▀▀▀▀▀▀▀▀  ▀         ▀          ▀                   ▀            ▀▀▀▀▀▀▀▀▀▀▀  ▀        ▀▀       ▀       ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀       ▀           
    ''' + RESET)
    #print("\t\t\t*\t\t\t\t\t\t\t\t\t\t*\n\t\t\t*\t\t\t\t\t\t\t\t\t\t*")
    #print("\t\t\t*********************************************************************************")
    print("")

def user_interface():
    print_logo()
    print("")
    init(autoreset=True)
    #print(Fore.GREEN + Style.BRIGHT + "CBI PENTEST est un outil polyvalent pour les tests de pénétration automatisés,")
    #print(Fore.CYAN + Style.BRIGHT + "utilisant l'intelligence artificielle")
    print("")
    print("\t\t\t"+Fore.YELLOW + Style.BRIGHT + "You can choose from different options to perform penetration testing tasks:")
    print("")
    #print("\t\t\t           [1]> Intelligence gathering")
    print("\t\t\t           [1]> scanning")
    print("\t\t\t           [2]> Vulnerability analysis")
    print("\t\t\t           [3]> Exploitation")
    print("\t\t\t           [4]> Post-Exploitation")
    print("\t\t\t           [5]> Reporting")
    #print("")
    print("\t\t\t           [0]> Quitter")
    print("")
    print("\n\n\n")
    option = int(input("CBI PENTEST ==>> "))
    return option

def run_pentest(option):
    #if option == 1:
        #os.system("python3 Intelligence_gathering.py")
    if option == 1:
        os.system("python3 scanning.py")
        #input(RESET+"\n enter to exit ! ")
    elif option == 2:
        os.system("python3 Vulnerability_analysis.py")
    elif option == 3:
        os.system("python3 Exploitation.py")
    elif option == 4:
        os.system("python3 post_exploitation/post_exploitation.py")
    elif option == 5:
        os.system("python3 Reporting.py")
    elif option == 0:
        sys.exit()
    else:
        print("\nERREUR : Entrée incorrecte")
        timeout(3)
        restart_program()

if __name__ == "__main__":
    while True:
        option = user_interface()
        run_pentest(option)
